import React, { Component } from "react";
import ReactDOM from "react-dom";
import {createStore} from 'redux';

import "./styles.css";
import Map from "./components/Board"
import Connection from "./components/Connection"
import allReducers from "./reducers";
import { Provider } from 'react-redux';
import PowerToggle from "./components/Power";
import Meter from "./components/Meter";
import SelectOption from "./components/SelectOption";

const store = createStore(
  allReducers,
  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
)

//var links = [{ s: 0, d: 1 }, { s: 1, d: 2 }, { s: 2, d: 3 }, { s: 3, d: 4 }];

class App extends Component {
  render() {
    const options = [
      {
        label: "Lab #1: Three Phase Network",
        options: [
          { label: "Exercise #1: Start connection of three phase power source", value: "1.1" },
          { label: "Exercise #2: Delta connection of three phase power source", value: "1.2" },
          { label: "Exercise #3: Phase sequence in the generator", value: "1.3" },
        ]
      },
      {
        label: "Lab #2: Three Phase Network Underload",
        options: [
          { label: "Exercise #1: Star-connected three-phase source / start-connected resistive load", value: "2.1" },
          { label: "Exercise #2: Star-connected three-phase source / delta-connected resistive load", value: "2.2" },
          { label: "Exercise #3: Delta-connected three-phase source / start-connected resistive load", value: "2.3" },
          { label: "Exercise #4: Delta-connected three-phase source / delta-connected resistive load", value: "2.4" }
        ]
      },
      {
        label: "Lab #3: Condition of Symmetry and Balance",
        options: [
          { label: "Exercise #1: Connecting an unbalanced resistive load", value: "3.1" },
          { label: "Exercise #2: Connection with three-phase and single-phase loads", value: "3.2" }
        ]
      },
      {
        label: "Lab #4: Capacitive and Inductive Loads",
        options: [
          { label: "Exercise #1: Connection of three-phase inductive load", value: "4.1" },
          { label: "Exercise #2: Test points of the oscilloscope", value: "4.2" },
          { label: "Exercise #3: Connection of the three-phase R-L-C load", value: "4.3" },
          { label: "Exercise #4: Test points of the oscilloscope in the delta connection", value: "4.4" }
        ]
      }
    ]
    return (
      <div className="App grid">
        <div id="left-panel" className="grid">
          <div id="left-panel-upper" className="grid">
            <div id="upper-a">
            </div>
            <div id="upper-b">
              <SelectOption options={options} />
              <PowerToggle />
            </div>
          </div>
          <div id="left-panel-lower">
            <Connection value="B" text="Banana Jack"/>
            <Connection value="M" text="DMM"/>
            <Connection value="P" text="Oscilloscope"/>
            <Meter value="V" text="Voltage"/>
            <Meter value="C" text="Current"/>
          </div>
        </div>
        <div id="right-panel">
          <Map width={666} height={1340} />
        </div>
      </div>
    );
  }
}

const rootElement = document.getElementById("root");
ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>, 
rootElement);
